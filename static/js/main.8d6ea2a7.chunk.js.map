{"version":3,"sources":["components/BlogCard.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["BlogCard","data","deleteData","totalPage","editPost","className","src","image","alt","title","body","onClick","id","Header","searchBlog","onChange","event","target","value","type","placeholder","style","border","href","rel","Footer","App","fetch","method","headers","Accept","JSON","stringify","delete","then","res","json","undefined","setState","showSuccess","showError","timeout","setTimeout","list","state","filter","item","unChangedData","length","clearTimeout","showModal","savePost","indexOfList","indexOf","find","l","indexOfData","indexOfUnChangedData","editItems","name","loadMore","getItems","offset","maxSize","min","max","tempList","i","getMin","push","num1","num2","Math","searchKey","searchedData","toLowerCase","includes","response","filteredData","this","defaultValue","rows","map","display","justifyContent","marginTop","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d6ea2a7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n// got the data and other props\n//control the delete and edit buttons here\nfunction BlogCard({ data, totalPage, deleteData, editPost }) {\n  return (\n    <div className=\"posts\">\n      <div className=\"card\">\n        <div className=\"img-container\">\n          <img src={data.image} alt=\"Posts\" />\n        </div>\n        <div className=\"card-content\">\n          <h2>{data.title}</h2>\n          <p className=\"excerpt\">{data.body}</p>\n          <div className=\"btnSet\">\n            <button className=\"editButton\" onClick={() => editPost(data)}>\n              <i className=\"ri-edit-2-fill\" />\n            </button>\n            <button\n              className=\"deleteButton\"\n              onClick={() => deleteData(data.id)}\n            >\n              <i className=\"ri-delete-bin-fill\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BlogCard;\n","import React from \"react\";\nimport \"../App\";\n\n// got the data and other props\n//send the keys here for the search process\nfunction Header({ searchBlog }) {\n  return (\n    <header className=\"wrapper\">\n      <nav>\n        <ul>\n          <li className=\"logo\">\n            <h4>Ayşegül Topyürek</h4>\n            <h5>Blog</h5>\n          </li>\n          <li>\n            <div className=\"search\">\n              <input\n                onChange={(event) => searchBlog(event.target.value)}\n                type=\"search\"\n                placeholder=\"Search\"\n              />\n              <i className=\"ri-search-line\" style={{ border: \"none\" }} />\n            </div>\n          </li>\n          <li>\n            <div className=\"socialMedia\">\n              <a\n                href=\"https://github.com/AysegulTopyurek\"\n                target={\"_blank\"}\n                rel={\"noReferrer\"}\n              >\n                <i className=\"ri-github-line\" />\n              </a>\n              <a\n                href={\"https://www.linkedin.com/in/aysegultopyurek/\"}\n                target={\"_blank\"}\n                rel={\"noReferrer\"}\n              >\n                <i className=\"ri-linkedin-box-fill\" />\n              </a>\n            </div>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"hi\">\n        <h1>\n          I'am\n          <br />\n          Ayşegül\n        </h1>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"../App\";\n// got the data and other props\nfunction Footer() {\n  return (\n    <footer>\n      <div className=\"footerTitle\">\n        <h2>Life is short</h2>\n      </div>\n      <div className=\"mainFooterMessage\">\n        <div>\n          <h3>Take the trip</h3>\n          <p>\n            Life will get better as you see new places. It will be meaningful as\n            you collect the moment. I collect my memories both by traveling and\n            writing.\n          </p>\n        </div>\n        <div>\n          <h3>Buy the shoes</h3>\n          <p>\n            There is no better feeling in life than doing the things that make\n            us happy. It would be buying a shoe, breaking the atom into pieces.\n            It does not matter\n          </p>\n        </div>\n        <div>\n          <h3>Eat the cake</h3>\n          <p>\n            When we see new places, we definitely get to know new tastes. Every\n            place I go, I definitely eat a local dish. This can sometimes turn\n            out badly, but I am happy in this situation too. I am in love with\n            Turkish cuisine and French cuisine\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport BlogCard from \"./components/BlogCard\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"remixicon/fonts/remixicon.css\";\n\nexport default class App extends Component {\n  //it works first - do not forget :d\n  constructor() {\n    super();\n    this.timeout = null;\n    this.state = {\n      list: [],\n      data: [],\n      offset: 0,\n      maxSize: 10,\n      totalPage: 0,\n      showModal: false,\n      showSuccess: false,\n      showError: false,\n      unChangedData: [],\n      title: \"\",\n      body: \"\",\n      id: \"\",\n    };\n  }\n\n  //We fetch our data here as it is the first place to work after loading render\n  //To limit the data, we equalize the data returned from the function.\n  //We only want to see undeleted data\n  componentDidMount() {\n    fetch(\"https://615224e54a5f22001701d661.mockapi.io/posts\")\n      .then((response) => response.json())\n      .then((data) => {\n        const filteredData = data.filter((item) => item.delete === false);\n\n        this.setState(\n          {\n            data: filteredData,\n            totalPage: filteredData.length,\n            unChangedData: filteredData,\n          },\n          () => {\n            this.setState({\n              list: this.getItems(this.state.offset, this.state.maxSize),\n              offset: this.state.offset + 10,\n              maxSize: this.state.maxSize + 10,\n            });\n          }\n        );\n      });\n  }\n  //delete data from blog cards with id\n  deleteData = (id) => {\n    //const list = this.state.list.filter((item) => item.id !== id);\n    //After 3 seconds a pop up will show on the screen\n\n    fetch(\"https://615224e54a5f22001701d661.mockapi.io/posts/\" + id, {\n      method: \"put\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ delete: true }),\n    })\n      .then((res) => res.json())\n      .then((res) =>\n        res !== undefined\n          ? this.setState({ showSuccess: true })\n          : this.setState({ showError: true })\n      );\n    this.timeout = setTimeout(() => {\n      this.setState({\n        showSuccess: false,\n        showError: false,\n        list: this.state.list.filter((item) => item.id !== id),\n        data: this.state.data.filter((item) => item.id !== id),\n        unChangedData: this.state.unChangedData.filter(\n          (item) => item.id !== id\n        ),\n        totalPage:\n          this.state.list.length !== 0 ? this.state.list.length - 1 : 0,\n      });\n    }, 3000);\n    return () => {\n      // clean\n      clearTimeout(this.timeout);\n    };\n  };\n  //We replace the title and body fields with the incoming data\n  editPost = (data) => {\n    this.setState(\n      {\n        title: data.title,\n        body: data.body,\n        id: data.id,\n      },\n      () => {\n        this.setState({ showModal: true });\n      }\n    );\n  };\n  //We send the new title and body of the data using id with the put operation\n  savePost = () => {\n    fetch(\n      \"https://615224e54a5f22001701d661.mockapi.io/posts/\" + this.state.id,\n      {\n        method: \"put\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          title: this.state.title,\n          body: this.state.body,\n        }),\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        let indexOfList = this.state.list.indexOf(\n          this.state.list.find((l) => l.id === this.state.id)\n        );\n        const list = this.state.list;\n        list[indexOfList] = res;\n\n        let indexOfData = this.state.data.indexOf(\n          this.state.data.find((l) => l.id === this.state.id)\n        );\n        const data = this.state.data;\n        data[indexOfData] = res;\n        let indexOfUnChangedData = this.state.unChangedData.indexOf(\n          this.state.unChangedData.find((l) => l.id === this.state.id)\n        );\n        const unChangedData = this.state.unChangedData;\n        unChangedData[indexOfUnChangedData] = res;\n        this.setState({\n          data: data,\n          list: list,\n          unChangedData: unChangedData,\n          showModal: false,\n        });\n      });\n  };\n  //As we enter data from the keyboard, we synchronize the data to the title if it is title, and to the body if it is body.\n  editItems = (event) => {\n    switch (event.target.name) {\n      case \"title\":\n        this.setState({\n          title: event.target.value,\n        });\n        break;\n      case \"body\":\n        this.setState({\n          body: event.target.value,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  //Clicking the button for load more increases the maxsize and offset\n  // increases the list in the state without resetting it.\n  loadMore = () => {\n    this.setState(\n      {\n        list: [\n          ...this.state.list,\n          ...this.getItems(this.state.offset, this.state.maxSize),\n        ],\n      },\n      () => {\n        this.setState({\n          offset: this.state.offset + 10,\n          maxSize: this.state.maxSize + 10,\n        });\n      }\n    );\n  };\n  //Gets offset and maxsize for getItems function.\n  //If length is not increasing by 10, we piped it to a function to increase the total data by length\n  getItems = (min, max) => {\n    let tempList = [];\n    for (var i = min; i < this.getMin(max, this.state.totalPage); i++) {\n      tempList.push(this.state.data[i]);\n    }\n    return tempList;\n  };\n  getMin = (num1, num2) => {\n    return Math.min(num1, num2);\n  };\n  searchBlog = (searchKey) => {\n    this.setState(\n      {\n        offset: 0,\n        maxSize: 10,\n      },\n      () => {\n        const searchedData = this.state.unChangedData.filter(\n          (item) =>\n            item.title.toLowerCase().includes(searchKey) ||\n            item.body.toLowerCase().includes(searchKey)\n        );\n        this.setState(\n          {\n            data: !!searchKey ? searchedData : this.state.unChangedData,\n            totalPage: !!searchKey\n              ? searchedData.length\n              : this.state.unChangedData.length,\n          },\n          () => {\n            this.setState({\n              list: this.getItems(this.state.offset, this.state.maxSize),\n              offset: this.state.offset + 10,\n              maxSize: this.state.maxSize + 10,\n            });\n          }\n        );\n      }\n    );\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Header searchBlog={this.searchBlog} />\n        <main>\n          {this.state.showModal && (\n            <div className=\"modalWrapper\">\n              <div className=\"modal\">\n                <div className=\"modalHeader\">\n                  <div className=\"close\">\n                    <span onClick={() => this.setState({ showModal: false })}>\n                      <i className=\"ri-close-line\" />\n                    </span>\n                  </div>\n                  <h3>EDIT POST</h3>\n                </div>\n\n                <div>\n                  <div>\n                    <div className=\"label\">Title</div>\n                    <input\n                      name=\"title\"\n                      defaultValue={this.state.title}\n                      onChange={this.editItems}\n                    />\n                  </div>\n                  <div>\n                    <div className=\"label\">Content</div>\n                    <textarea\n                      rows=\"7\"\n                      name=\"body\"\n                      defaultValue={this.state.body}\n                      onChange={this.editItems}\n                    />\n                  </div>\n                  <button onClick={this.savePost}>SAVE</button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"blog\">\n            {this.state.list.map((data) => (\n              //sent the data to the component and set the unique id\n              <BlogCard\n                data={data}\n                totalPage={this.state.totalPage}\n                key={data.id}\n                deleteData={this.deleteData}\n                editPost={this.editPost}\n              />\n            ))}\n          </div>\n          {this.state.showSuccess && (\n            <div className=\"popupSuccess\">\n              <div className=\"modalWrapper\">\n                <div className=\"modal\">\n                  <span\n                    className=\"close-icon\"\n                    onClick={() => {\n                      this.setState({ showSuccess: false });\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n          {this.state.showError && (\n            <div className=\"popupError\">\n              <div className=\"modalWrapper\">\n                <div className=\"modal\">\n                  <span\n                    className=\"close-icon\"\n                    onClick={() => {\n                      this.setState({ showError: false });\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n          {this.state.totalPage > this.state.offset && (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: \"-4em\",\n              }}\n            >\n              {\n                <button\n                  className=\"loadMore\"\n                  onClick={() => {\n                    this.loadMore();\n                  }}\n                >\n                  Load More\n                </button>\n              }\n            </div>\n          )}\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}